buildscript {
    repositories {
        jcenter()
        mavenLocal() //added
        google() //added
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
    mavenLocal() //added
    google()
}

dependencies {
    compile "com.android.support:support-v4:25.0.1"
    compile "com.android.support:support-v13:25.0.1"
    compile "com.android.support:cardview-v7:25.0.1"
    compile "com.android.support:appcompat-v7:25.0.1"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    //all added below
    implementation 'com.google.android.gms:play-services-wearable:11.2.0'
    api 'eu.hgross:blaubot-android:2+'
    api group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    api('com.teledoc:teledoc-common:0.0.1-SNAPSHOT') {
        exclude group: 'org.eclipse.persistence', module: 'eclipselink'
    }
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 25
    }

    compileOptions {
        //sourceCompatibility JavaVersion.VERSION_1_7
        //targetCompatibility JavaVersion.VERSION_1_7
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

}
